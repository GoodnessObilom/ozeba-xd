const config = require('../config');
const { cmd } = require('../command');
const { runtime } = require('../lib/functions');
const os = require("os");
const axios = require('axios');

cmd({
    pattern: "menu3",
    desc: "menu the bot",
    category: "menu",
    filename: __filename
},
    async (conn, mek, m, { from, sender, pushname, reply }) => {
        await conn.sendMessage(m.key.remoteJid, {
            react: {
                text: "‚ö°",
                key: m.key
            }
        });
        try {
            const dec = `‚îå‚îÄ‚îÄ‚îÄ„Äå üöÄ OZEBA XD Main Menu „Äç‚îÄ‚îÄ‚îÄ‚îê
‚îÇ üíô Owner: ${config.OWNER_NAME}
‚îÇ ‚öôÔ∏è Mode: ${config.MODE}
‚îÇ üß† Type: NodeJs (Multi Device)
‚îÇ ‚å®Ô∏è Prefix: ${config.PREFIX}
‚îÇ üßæ Version: 2.0.0 Beta
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

‚îÄ‚îÄ‚îÄ„Äå üíô INFO „Äç‚îÄ‚îÄ‚îÄ
 ‚Ä¢ ·¥ús·¥á ${config.PREFIX}ozeba ·¥õ·¥è s·¥á·¥á ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs ·¥Ä ô·¥è·¥ú·¥õ ·¥õ ú·¥á  ô·¥è·¥õ

‚îÄ‚îÄ‚îÄ„Äå üß© Command Categories „Äç‚îÄ‚îÄ‚îÄ
 ‚Ä¢ ü§ñ Aimenu
 ‚Ä¢ üé≠ Animemenu
 ‚Ä¢ üòπ Reactions
 ‚Ä¢ üîÅ Convertmenu
 ‚Ä¢ üéâ Funmenu
 ‚Ä¢ ‚¨áÔ∏è Dlmenu
 ‚Ä¢ ‚öíÔ∏è List
 ‚Ä¢ üè† Mainmenu
 ‚Ä¢ üë• Groupmenu
 ‚Ä¢ üìú Allmenu
 ‚Ä¢ üëë Ownermenu
 ‚Ä¢ üß© Othermenu
 ‚Ä¢ üñåÔ∏è Logo
 ‚Ä¢ üì¶ Repo
 ‚Ä¢ ‚öôÔ∏è Settingmenu

> ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è …¢·¥è·¥è·¥Ö…¥·¥áÍú±Íú± ·¥õ·¥á·¥Ñ ú
`;

            await conn.sendMessage(
                from,
                {
                    image: { url: 'https://files.catbox.moe/3m1vb1.png' },
                    caption: dec,
                    contextInfo: {
                        mentionedJid: [m.sender],
                        forwardingScore: 2,
                        isForwarded: true,
                        forwardedNewsletterMessageInfo: {
                            newsletterJid: '120363421812440006@newsletter',
                            newsletterName: 'ùôäùôØùôöùôóùôñ ùôìùòø ùôäùôõùôõùôûùôòùôûùôñùô°',
                            serverMessageId: 143
                        }
                    }
                },
                { quoted: mek }
            );

            // Send cool voice note with context
            await conn.sendMessage(from, {
                audio: { url: 'https://github.com/Itzpatron/PATRON-DATA/raw/refs/heads/main/autovoice/lost-astro.mp3' },
                mimetype: 'audio/mp4',
                ptt: true,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 2,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363421812440006@newsletter',
                        newsletterName: 'ùôäùôØùôöùôóùôñ ùôìùòø ùôäùôõùôõùôûùôòùôûùôñùô°',
                        serverMessageId: 143
                    }
                }
            }, { quoted: mek });

        } catch (e) {
            console.error(e);
            reply(`‚ùå Error:\n${e}`);
        }
    });

cmd({
    pattern: "logo",
    alias: ["logomenu"],
    desc: "menu the bot",
    category: "menu",
    filename: __filename
},
    async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
        await conn.sendMessage(m.key.remoteJid, {
            react: {
                text: "üßÉ",
                key: m.key
            }
        });
        try {
            let dec = `‚îÄ‚îÄ‚îÄ„Äå üé® LOGO LIST „Äç‚îÄ‚îÄ‚îÄ
 ‚Ä¢ ·¥ús·¥á ${config.PREFIX}ozeba ·¥õ·¥è s·¥á·¥á ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs ·¥Ä ô·¥è·¥ú·¥õ ·¥õ ú·¥á  ô·¥è·¥õ

 ‚Ä¢ neonlight
 ‚Ä¢ blackpink
 ‚Ä¢ dragonball
 ‚Ä¢ 3dcomic
 ‚Ä¢ america
 ‚Ä¢ naruto
 ‚Ä¢ sadgirl
 ‚Ä¢ clouds
 ‚Ä¢ futuristic
 ‚Ä¢ 3dpaper
 ‚Ä¢ eraser
 ‚Ä¢ sunset
 ‚Ä¢ leaf
 ‚Ä¢ galaxy
 ‚Ä¢ sans
 ‚Ä¢ boom
 ‚Ä¢ hacker
 ‚Ä¢ devilwings
 ‚Ä¢ nigeria
 ‚Ä¢ bulb
 ‚Ä¢ angelwings
 ‚Ä¢ zodiac
 ‚Ä¢ luxury
 ‚Ä¢ paint
 ‚Ä¢ frozen
 ‚Ä¢ castle
 ‚Ä¢ tatoo
 ‚Ä¢ valorant
 ‚Ä¢ bear
 ‚Ä¢ typography
 ‚Ä¢ birthday
`;

            await conn.sendMessage(
                from,
                {
                    image: { url: `https://files.catbox.moe/3m1vb1.png` },
                    caption: dec,
                    contextInfo: {
                        mentionedJid: [m.sender],
                        forwardingScore: 2,
                        isForwarded: true,
                        forwardedNewsletterMessageInfo: {
                            newsletterJid: '120363421812440006@newsletter',
                            newsletterName: "ùôäùôØùôöùôóùôñ ùôìùòø ùôäùôõùôõùôûùôòùôûùôñùô°",
                            serverMessageId: 143
                        }
                    }
                },
                { quoted: mek }
            );

        } catch (e) {
            console.log(e);
            reply(`${e}`);
        }
    });
cmd({
    pattern: "reactions",
    desc: "Shows the reaction commands",
    category: "menu",
    filename: __filename
},
    async (conn, mek, m, { from, quoted, reply }) => {
        await conn.sendMessage(m.key.remoteJid, {
            react: {
                text: "üí´",
                key: m.key
            }
        });
        try {
            let dec = `‚îÄ‚îÄ‚îÄ„Äå üòπ REACTIONS MENU „Äç‚îÄ‚îÄ‚îÄ
 ‚Ä¢ ·¥ús·¥á ${config.PREFIX}ozeba ·¥õ·¥è s·¥á·¥á ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs ·¥Ä ô·¥è·¥ú·¥õ ·¥õ ú·¥á  ô·¥è·¥õ 

 ‚Ä¢ bully @tag
 ‚Ä¢ cuddle @tag
 ‚Ä¢ cry @tag
 ‚Ä¢ hug @tag
 ‚Ä¢ awoo @tag
 ‚Ä¢ kiss @tag
 ‚Ä¢ lick @tag
 ‚Ä¢ pat @tag
 ‚Ä¢ smug @tag
 ‚Ä¢ bonk @tag
 ‚Ä¢ yeet @tag
 ‚Ä¢ blush @tag
 ‚Ä¢ smile @tag
 ‚Ä¢ wave @tag
 ‚Ä¢ highfive @tag
 ‚Ä¢ handhold @tag
 ‚Ä¢ nom @tag
 ‚Ä¢ bite @tag
 ‚Ä¢ glomp @tag
 ‚Ä¢ slap @tag
 ‚Ä¢ kill @tag
 ‚Ä¢ happy @tag
 ‚Ä¢ wink @tag
 ‚Ä¢ poke @tag
 ‚Ä¢ dance @tag
 ‚Ä¢ cringe @tag

> ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è …¢·¥è·¥è·¥Ö…¥·¥áÍú±Íú± ·¥õ·¥á·¥Ñ ú`;

            await conn.sendMessage(
                from,
                {
                    image: { url: `https://files.catbox.moe/3m1vb1.png` },
                    caption: dec,
                    contextInfo: {
                        mentionedJid: [m.sender],
                        forwardingScore: 2,
                        isForwarded: true,
                        forwardedNewsletterMessageInfo: {
                            newsletterJid: '120363421812440006@newsletter',
                            newsletterName: 'ùôäùôØùôöùôóùôñ ùôìùòø ùôäùôõùôõùôûùôòùôûùôñùô°',
                            serverMessageId: 144
                        }
                    }
                },
                { quoted: mek }
            );

        } catch (e) {
            console.log(e);
            reply(`${e}`);
        }
    });

// dlmenu

cmd({
    pattern: "dlmenu",
    desc: "menu the bot",
    category: "menu",
    filename: __filename
},
    async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
        await conn.sendMessage(m.key.remoteJid, {
            react: {
                text: "‚§µÔ∏è",
                key: m.key
            }
        });
        try {
            let dec = `‚îÄ‚îÄ‚îÄ„Äå ‚¨áÔ∏è DOWNLOAD MENU „Äç‚îÄ‚îÄ‚îÄ
 ‚Ä¢ ·¥ús·¥á ${config.PREFIX}ozeba ·¥õ·¥è s·¥á·¥á ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs ·¥Ä ô·¥è·¥ú·¥õ ·¥õ ú·¥á  ô·¥è·¥õ 

 ‚Ä¢ facebook
 ‚Ä¢ facebook2
 ‚Ä¢ mediafire
 ‚Ä¢ tiktok
 ‚Ä¢ tiktok2
 ‚Ä¢ twitter
 ‚Ä¢ Insta
 ‚Ä¢ Insta2
 ‚Ä¢ apk
 ‚Ä¢ img
 ‚Ä¢ tt2
 ‚Ä¢ pins
 ‚Ä¢ modapk
 ‚Ä¢ fb2
 ‚Ä¢ pinterest 
 ‚Ä¢ ttsearch
 ‚Ä¢ spotify
 ‚Ä¢ lyrics
 ‚Ä¢ play
 ‚Ä¢ play2
 ‚Ä¢ play3
 ‚Ä¢ audio
 ‚Ä¢ video
 ‚Ä¢ video2
 ‚Ä¢ ytmp3
 ‚Ä¢ ytmp4
 ‚Ä¢ song
 ‚Ä¢ darama
 ‚Ä¢ gdrive
 ‚Ä¢ ssweb
 ‚Ä¢ tiks

> ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è …¢·¥è·¥è·¥Ö…¥·¥áÍú±Íú± ·¥õ·¥á·¥Ñ ú`;

            await conn.sendMessage(
                from,
                {
                    image: { url: `https://files.catbox.moe/3m1vb1.png` },
                    caption: dec,
                    contextInfo: {
                        mentionedJid: [m.sender],
                        forwardingScore: 2,
                        isForwarded: true,
                        forwardedNewsletterMessageInfo: {
                            newsletterJid: '120363421812440006@newsletter',
                            newsletterName: 'ùôäùôØùôöùôóùôñ ùôìùòø ùôäùôõùôõùôûùôòùôûùôñùô°',
                            serverMessageId: 143
                        }
                    }
                },
                { quoted: mek }
            );

        } catch (e) {
            console.log(e);
            reply(`${e}`);
        }
    });
// group menu

cmd({
    pattern: "groupmenu",
    desc: "menu the bot",
    category: "menu",
    filename: __filename
},
    async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
        await conn.sendMessage(m.key.remoteJid, {
            react: {
                text: "‚§µÔ∏è",
                key: m.key
            }
        });
        try {
            let dec = `‚îÄ‚îÄ‚îÄ„Äå üë• GROUP MENU „Äç‚îÄ‚îÄ‚îÄ
 ‚Ä¢ ·¥ús·¥á ${config.PREFIX}ozeba ·¥õ·¥è s·¥á·¥á ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs ·¥Ä ô·¥è·¥ú·¥õ ·¥õ ú·¥á  ô·¥è·¥õ 

 ‚Ä¢ grouplink
 ‚Ä¢ anti-tag
 ‚Ä¢ kickall
 ‚Ä¢ add
 ‚Ä¢ remove
 ‚Ä¢ kick
 ‚Ä¢ out
 ‚Ä¢ promote 
 ‚Ä¢ demote
 ‚Ä¢ dismiss 
 ‚Ä¢ revoke
 ‚Ä¢ savecontact
 ‚Ä¢ goodbye
 ‚Ä¢ welcome
 ‚Ä¢ delete 
 ‚Ä¢ getpic
 ‚Ä¢ ginfo
 ‚Ä¢ pdm
 ‚Ä¢ delete 
 ‚Ä¢ requestlist
 ‚Ä¢ updategname
 ‚Ä¢ updategdesc
 ‚Ä¢ acceptall
 ‚Ä¢ rejectall
 ‚Ä¢ senddm
 ‚Ä¢ broadcast
 ‚Ä¢ broadcast2
 ‚Ä¢ mute
 ‚Ä¢ unmute
 ‚Ä¢ lockgc
 ‚Ä¢ unlockgc
 ‚Ä¢ invite
 ‚Ä¢ sendinvite
 ‚Ä¢ tag
 ‚Ä¢ hidetag
 ‚Ä¢ tagall
 ‚Ä¢ tagadmins

> ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è …¢·¥è·¥è·¥Ö…¥·¥áÍú±Íú± ·¥õ·¥á·¥Ñ ú`;

            await conn.sendMessage(
                from,
                {
                    image: { url: `https://files.catbox.moe/3m1vb1.png` },
                    caption: dec,
                    contextInfo: {
                        mentionedJid: [m.sender],
                        forwardingScore: 2,
                        isForwarded: true,
                        forwardedNewsletterMessageInfo: {
                            newsletterJid: '120363421812440006@newsletter',
                            newsletterName: 'ùôäùôØùôöùôóùôñ ùôìùòø ùôäùôõùôõùôûùôòùôûùôñùô°',
                            serverMessageId: 143
                        }
                    }
                },
                { quoted: mek }
            );

        } catch (e) {
            console.log(e);
            reply(`${e}`);
        }
    });

// fun menu

cmd({
    pattern: "funmenu",
    desc: "menu the bot",
    category: "menu",
    filename: __filename
},
    async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
        await conn.sendMessage(m.key.remoteJid, {
            react: {
                text: "‚§µÔ∏è",
                key: m.key
            }
        });
        try {

            let dec = `‚îÄ‚îÄ‚îÄ„Äå üéâ FUN MENU „Äç‚îÄ‚îÄ‚îÄ
 ‚Ä¢ ·¥ús·¥á ${config.PREFIX}ozeba ·¥õ·¥è s·¥á·¥á ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs ·¥Ä ô·¥è·¥ú·¥õ ·¥õ ú·¥á  ô·¥è·¥õ 

 ‚Ä¢ shapar
 ‚Ä¢ rate
 ‚Ä¢ insult
 ‚Ä¢ hack
 ‚Ä¢ ship
 ‚Ä¢ character
 ‚Ä¢ pickup 
 ‚Ä¢ joke
 ‚Ä¢ hrt
 ‚Ä¢ hpy
 ‚Ä¢ syd
 ‚Ä¢ anger
 ‚Ä¢ shy
 ‚Ä¢ kiss
 ‚Ä¢ mon
 ‚Ä¢ cunfuzed
 ‚Ä¢ setpp
 ‚Ä¢ hand
 ‚Ä¢ nikal
 ‚Ä¢ hold
 ‚Ä¢ ‚Ä¢ hug
 ‚Ä¢ nikal
 ‚Ä¢ hifi
 ‚Ä¢ poke

> ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è …¢·¥è·¥è·¥Ö…¥·¥áÍú±Íú± ·¥õ·¥á·¥Ñ ú`;

            await conn.sendMessage(
                from,
                {
                    image: { url: `https://files.catbox.moe/3m1vb1.png` },
                    caption: dec,
                    contextInfo: {
                        mentionedJid: [m.sender],
                        forwardingScore: 2,
                        isForwarded: true,
                        forwardedNewsletterMessageInfo: {
                            newsletterJid: '120363421812440006@newsletter',
                            newsletterName: 'ùôäùôØùôöùôóùôñ ùôìùòø ùôäùôõùôõùôûùôòùôûùôñl',
                            serverMessageId: 143
                        }
                    }
                },
                { quoted: mek }
            );

        } catch (e) {
            console.log(e);
            reply(`${e}`);
        }
    });

// other menu

cmd({
    pattern: "othermenu",
    desc: "menu the bot",
    category: "menu",
    filename: __filename
},
    async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
        await conn.sendMessage(m.key.remoteJid, {
            react: {
                text: "ü§ñ",
                key: m.key
            }
        });
        try {
            let dec = `‚îÄ‚îÄ‚îÄ„Äå üìå OTHER MENU „Äç‚îÄ‚îÄ‚îÄ
 ‚Ä¢ ·¥ús·¥á ${config.PREFIX}ozeba ·¥õ·¥è s·¥á·¥á ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs ·¥Ä ô·¥è·¥ú·¥õ ·¥õ ú·¥á  ô·¥è·¥õ 

 ‚Ä¢ timenow
 ‚Ä¢ date
 ‚Ä¢ count
 ‚Ä¢ removebg
 ‚Ä¢ imgscan
 ‚Ä¢ calculate
 ‚Ä¢ countx
 ‚Ä¢ flip
 ‚Ä¢ coinflip
 ‚Ä¢ rcolor
 ‚Ä¢ roll
 ‚Ä¢ fact
 ‚Ä¢ cpp
 ‚Ä¢ otpbox
 ‚Ä¢ tempnum
 ‚Ä¢ templist 
 ‚Ä¢ inbox
 ‚Ä¢ tempmail
 ‚Ä¢ bible
 ‚Ä¢ rw
 ‚Ä¢ fancy
 ‚Ä¢ logo <text>
 ‚Ä¢ define
 ‚Ä¢ news
 ‚Ä¢ movie
 ‚Ä¢ weather
 ‚Ä¢ srepo
 ‚Ä¢ insult
 ‚Ä¢ save
 ‚Ä¢ wikipedia
 ‚Ä¢ gpass
 ‚Ä¢ githubstalk
 ‚Ä¢ ytstalk
 ‚Ä¢ wstalk
 ‚Ä¢ tiktokstalk
 ‚Ä¢ xstalk
 ‚Ä¢ yts
 ‚Ä¢ ytv

> ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è …¢·¥è·¥è·¥Ö…¥·¥áÍú±Íú± ·¥õ·¥á·¥Ñ ú`;

            await conn.sendMessage(
                from,
                {
                    image: { url: `https://files.catbox.moe/3m1vb1.png` },
                    caption: dec,
                    contextInfo: {
                        mentionedJid: [m.sender],
                        forwardingScore: 2,
                        isForwarded: true,
                        forwardedNewsletterMessageInfo: {
                            newsletterJid: '120363421812440006@newsletter',
                            newsletterName: 'ùôäùôØùôöùôóùôñ ùôìùòø ùôäùôõùôõùôûùôòùôûùôñùô°',
                            serverMessageId: 143
                        }
                    }
                },
                { quoted: mek }
            );

        } catch (e) {
            console.log(e);
            reply(`${e}`);
        }
    });
// main menu

cmd({
    pattern: "mainmenu",
    desc: "menu the bot",
    category: "menu",
    filename: __filename
},
    async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
        await conn.sendMessage(m.key.remoteJid, {
            react: {
                text: "üíô",
                key: m.key
            }
        });

        try {
            let dec = `‚îÄ‚îÄ‚îÄ„Äå üè† MAIN MENU „Äç‚îÄ‚îÄ‚îÄ
 ‚Ä¢ ·¥ús·¥á ${config.PREFIX}ozeba ·¥õ·¥è s·¥á·¥á ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs ·¥Ä ô·¥è·¥ú·¥õ ·¥õ ú·¥á  ô·¥è·¥õ

‚îÄ‚îÄ‚îÄ„Äå üõ†Ô∏è Games „Äç‚îÄ‚îÄ‚îÄ
 ‚Ä¢ squidgame
 ‚Ä¢ wrg
 ‚Ä¢ ttt
 ‚Ä¢ tttstop
 ‚Ä¢ *More soon*

‚îÄ‚îÄ‚îÄ„Äå ‚ÑπÔ∏è Bot Info / Controls „Äç‚îÄ‚îÄ‚îÄ
 ‚Ä¢ ping
 ‚Ä¢ ping2
 ‚Ä¢ alive
 ‚Ä¢ alive2
 ‚Ä¢ cinfo
 ‚Ä¢ runtime
 ‚Ä¢ uptime 
 ‚Ä¢ repo
 ‚Ä¢ owner
 ‚Ä¢ menu
 ‚Ä¢ menu2
 ‚Ä¢ menu3
 ‚Ä¢ restart

> ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è …¢·¥è·¥è·¥Ö…¥·¥áÍú±Íú± ·¥õ·¥á·¥Ñ ú`;

            await conn.sendMessage(
                from,
                {
                    image: { url: `https://files.catbox.moe/3m1vb1.png` },
                    caption: dec,
                    contextInfo: {
                        mentionedJid: [m.sender],
                        forwardingScore: 2,
                        isForwarded: true,
                        forwardedNewsletterMessageInfo: {
                            newsletterJid: '120363421812440006@newsletter',
                            newsletterName: 'ùôäùôØùôöùôóùôñ ùôìùòø ùôäùôõùôõùôûùôòùôûùôñùô°',
                            serverMessageId: 143
                        }
                    }
                },
                { quoted: mek }
            );

        } catch (e) {
            console.log(e);
            reply(`${e}`);
        }
    });

// owner menu

cmd({
    pattern: "ownermenu",
    desc: "menu the bot",
    category: "menu",
    filename: __filename
},
    async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
        await conn.sendMessage(m.key.remoteJid, {
            react: {
                text: "üî∞",
                key: m.key
            }
        });
        try {
            let dec = `‚îÄ‚îÄ‚îÄ„Äå üëë OWNER MENU „Äç‚îÄ‚îÄ‚îÄ
 ‚Ä¢ ·¥ús·¥á ${config.PREFIX}ozeba ·¥õ·¥è s·¥á·¥á ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs ·¥Ä ô·¥è·¥ú·¥õ ·¥õ ú·¥á  ô·¥è·¥õ

 ‚Ä¢ owner
 ‚Ä¢ menu
 ‚Ä¢ menu2
 ‚Ä¢ menu3
 ‚Ä¢ repost
 ‚Ä¢ allmenu
 ‚Ä¢ setaza
 ‚Ä¢ aza
 ‚Ä¢ repo
 ‚Ä¢ install
 ‚Ä¢ anti-delete on/off/status
 ‚Ä¢ creact
 ‚Ä¢ block
 ‚Ä¢ unblock
 ‚Ä¢ vv
 ‚Ä¢ vv2 / nice
 ‚Ä¢ setcmd
 ‚Ä¢ delcmd
 ‚Ä¢ listcmd
 ‚Ä¢ getpp
 ‚Ä¢ setgpp
 ‚Ä¢ setpp
 ‚Ä¢ restart
 ‚Ä¢ listsudo
 ‚Ä¢ setsudo
 ‚Ä¢ delsudo
 ‚Ä¢ shutdown
 ‚Ä¢ update
 ‚Ä¢ checkupdate
 ‚Ä¢ pfilter
 ‚Ä¢ gfilter
 ‚Ä¢ listfilter
 ‚Ä¢ pstop
 ‚Ä¢ gstop
 ‚Ä¢ alive
 ‚Ä¢ alive2
 ‚Ä¢ ping 
 ‚Ä¢ ping2
 ‚Ä¢ gjid
 ‚Ä¢ jid

> ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è …¢·¥è·¥è·¥Ö…¥·¥áÍú±Íú± ·¥õ·¥á·¥Ñ ú`;

            await conn.sendMessage(
                from,
                {
                    image: { url: `https://files.catbox.moe/3m1vb1.png` },
                    caption: dec,
                    contextInfo: {
                        mentionedJid: [m.sender],
                        forwardingScore: 2,
                        isForwarded: true,
                        forwardedNewsletterMessageInfo: {
                            newsletterJid: '120363421812440006@newsletter',
                            newsletterName: 'ùôäùôØùôöùôóùôñ ùôìùòø ùôäùôõùôõùôûcùôû·¥Ä ü',
                            serverMessageId: 143
                        }
                    }
                },
                { quoted: mek }
            );

        } catch (e) {
            console.log(e);
            reply(`${e}`);
        }
    });

// convert menu

cmd({
    pattern: "convertmenu",
    desc: "menu the bot",
    category: "menu",
    filename: __filename
},
    async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
        await conn.sendMessage(m.key.remoteJid, {
            react: {
                text: "ü•Ä",
                key: m.key
            }
        });
        try {
            let dec = `‚îÄ‚îÄ‚îÄ„Äå üîÑ CONVERT MENU „Äç‚îÄ‚îÄ‚îÄ
 ‚Ä¢ ·¥ús·¥á ${config.PREFIX}ozeba ·¥õ·¥è s·¥á·¥á ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs ·¥Ä ô·¥è·¥ú·¥õ ·¥õ ú·¥á  ô·¥è·¥õ

 ‚Ä¢ sticker
 ‚Ä¢ sticker2
 ‚Ä¢ quoted
 ‚Ä¢ emojimix
 ‚Ä¢ fancy
 ‚Ä¢ take
 ‚Ä¢ toaudio
 ‚Ä¢ toptt
 ‚Ä¢ toimg
 ‚Ä¢ getimage
 ‚Ä¢ tts2
 ‚Ä¢ ts3
 ‚Ä¢ tohd
 ‚Ä¢ aivoice
 ‚Ä¢ topdf
 ‚Ä¢ tts
 ‚Ä¢ trt
 ‚Ä¢ base64
 ‚Ä¢ unbase64
 ‚Ä¢ binary
 ‚Ä¢ dbinary
 ‚Ä¢ shorturl
 ‚Ä¢ veo3fast
 ‚Ä¢ text2video
 ‚Ä¢ urldecode
 ‚Ä¢ urlencode
 ‚Ä¢ tourl
 ‚Ä¢ repeat 
 ‚Ä¢ ask
 ‚Ä¢ readmore

> ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è …¢·¥è·¥è·¥Ö…¥·¥áÍú±Íú± ·¥õ·¥á·¥Ñ ú`;

            await conn.sendMessage(
                from,
                {
                    image: { url: `https://files.catbox.moe/3m1vb1.png` },
                    caption: dec,
                    contextInfo: {
                        mentionedJid: [m.sender],
                        forwardingScore: 2,
                        isForwarded: true,
                        forwardedNewsletterMessageInfo: {
                            newsletterJid: '120363421812440006@newsletter',
                            newsletterName: 'ùôäùôØùôöùôóùôñ ùôìùòø ùôäùôõùôõùôû·¥Ñ…™·¥Ä ü',
                            serverMessageId: 143
                        }
                    }
                },
                { quoted: mek }
            );

        } catch (e) {
            console.log(e);
            reply(`${e}`);
        }
    });

// anmie menu 

cmd({
    pattern: "animemenu",
    desc: "menu the bot",
    category: "menu",
    filename: __filename
},
    async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
        await conn.sendMessage(m.key.remoteJid, {
            react: {
                text: "üßö",
                key: m.key
            }
        });
        try {
            let dec = `‚îÄ‚îÄ‚îÄ„Äå üé≠ ANIME MENU „Äç‚îÄ‚îÄ‚îÄ
 ‚Ä¢ ·¥ús·¥á ${config.PREFIX}ozeba ·¥õ·¥è s·¥á·¥á ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs ·¥Ä ô·¥è·¥ú·¥õ ·¥õ ú·¥á  ô·¥è·¥õ 
 
 ‚Ä¢ fack
 ‚Ä¢ dog
 ‚Ä¢ awoo
 ‚Ä¢ garl
 ‚Ä¢ waifu
 ‚Ä¢ neko
 ‚Ä¢ megnumin
 ‚Ä¢ neko
 ‚Ä¢ maid
 ‚Ä¢ loli
 ‚Ä¢ animegirl
 ‚Ä¢ animegirl
 ‚Ä¢ animegirl1
 ‚Ä¢ animegirl2
 ‚Ä¢ animegirl3
 ‚Ä¢ animegirl4
 ‚Ä¢ animegirl5
 ‚Ä¢ anime1
 ‚Ä¢ anime1
 ‚Ä¢ anime2
 ‚Ä¢ anime3
 ‚Ä¢ anime4
 ‚Ä¢ anime5
 ‚Ä¢ animenews
 ‚Ä¢ foxgirl
 ‚Ä¢ naruto

> ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è …¢·¥è·¥è·¥Ö…¥·¥áÍú±Íú± ·¥õ·¥á·¥Ñ ú`;

            await conn.sendMessage(
                from,
                {
                    image: { url: `https://files.catbox.moe/3m1vb1.png` },
                    caption: dec,
                    contextInfo: {
                        mentionedJid: [m.sender],
                        forwardingScore: 2,
                        isForwarded: true,
                        forwardedNewsletterMessageInfo: {
                            newsletterJid: '120363421812440006@newsletter',
                            newsletterName: 'ùôäùôØùôöùôóùôñ ùôìùòø ùôäùôõùôõùôû·¥Ñ…™·¥Ä ü',
                            serverMessageId: 143
                        }
                    }
                },
                { quoted: mek }
            );

        } catch (e) {
            console.log(e);
            reply(`${e}`);
        }
    });


// ai menu 

cmd({
    pattern: "aimenu",
    desc: "menu the bot",
    category: "menu",
    filename: __filename
},
    async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
        await conn.sendMessage(m.key.remoteJid, {
            react: {
                text: "ü§ñ",
                key: m.key
            }
        });
        try {
            let dec = `‚îÄ‚îÄ‚îÄ„Äå ü§ñ AI MENU „Äç‚îÄ‚îÄ‚îÄ
 ‚Ä¢ ·¥ús·¥á ${config.PREFIX}ozeba ·¥õ·¥è s·¥á·¥á ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs ·¥Ä ô·¥è·¥ú·¥õ ·¥õ ú·¥á  ô·¥è·¥õ 
 
 ‚Ä¢ patronai
 ‚Ä¢ gpt
 ‚Ä¢ openai
 ‚Ä¢ gemini
 ‚Ä¢ meta
 ‚Ä¢ deepseek
 ‚Ä¢ grok
 ‚Ä¢ veo3fast
 ‚Ä¢ text2video
 ‚Ä¢ text2image
 ‚Ä¢ chatbot [on/off]
 ‚Ä¢ nowart
 ‚Ä¢ nowai
 ‚Ä¢ imagine 
 ‚Ä¢ imagine2
 ‚Ä¢ imagine3

> ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è …¢·¥è·¥è·¥Ö…¥·¥áÍú±Íú± ·¥õ·¥á·¥Ñ ú`;

            await conn.sendMessage(
                from,
                {
                    image: { url: `https://files.catbox.moe/3m1vb1.png` },
                    caption: dec,
                    contextInfo: {
                        mentionedJid: [m.sender],
                        forwardingScore: 2,
                        isForwarded: true,
                        forwardedNewsletterMessageInfo: {
                            newsletterJid: '120363421812440006@newsletter',
                            newsletterName: 'ùôäùôØùôöùôóùôñ ùôìùòø ùôäùôõùôõùôû·¥Ñ…™·¥Ä ü',
                            serverMessageId: 143
                        }
                    }
                },
                { quoted: mek }
            );

        } catch (e) {
            console.log(e);
            reply(`${e}`);
        }
    });

// Add settings menu command
cmd({
    pattern: "settingmenu",
    desc: "Shows the settings commands",
    category: "menu",
    filename: __filename
},
    async (conn, mek, m, { from, quoted, reply }) => {
        await conn.sendMessage(m.key.remoteJid, {
            react: {
                text: "‚öôÔ∏è",
                key: m.key
            }
        });
        try {
            let dec = `‚îÄ‚îÄ‚îÄ„Äå ‚öôÔ∏è SETTINGS MENU „Äç‚îÄ‚îÄ‚îÄ
 ‚Ä¢ ·¥ús·¥á ${config.PREFIX}ozeba ·¥õ·¥è s·¥á·¥á ·¥ç·¥è Ä·¥á ·¥Ö·¥á·¥õ·¥Ä…™ üs ·¥Ä ô·¥è·¥ú·¥õ ·¥õ ú·¥á  ô·¥è·¥õ

‚îÄ‚îÄ‚îÄ„Äå üîß BOT SETTINGS „Äç‚îÄ‚îÄ‚îÄ
 ‚Ä¢ allvar [view all settings]
 ‚Ä¢ setprefix [prefix]
 ‚Ä¢ mode [private/public]
 ‚Ä¢ auto-typing [on/off]
 ‚Ä¢ mention-reply [on/off]
 ‚Ä¢ always-online [on/off]
 ‚Ä¢ auto-recording [on/off]
 ‚Ä¢ auto-seen [on/off]
 ‚Ä¢ status-react [on/off]
 ‚Ä¢ read-message [on/off]
 ‚Ä¢ anti-bad [on/off]
 ‚Ä¢ auto-reply [on/off]
 ‚Ä¢ auto-react [on/off]
 ‚Ä¢ status-reply [on/off]
 ‚Ä¢ sticker-name [name]
 ‚Ä¢ custom-react [on/off]
 ‚Ä¢ status-msg [message]
 ‚Ä¢ antidel-path [same/log]
 ‚Ä¢ setcustomemojis [emojis]
 ‚Ä¢ owner-number [number]
 ‚Ä¢ owner-name [name]
 ‚Ä¢ anti-call [on/off] 

> ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è …¢·¥è·¥è·¥Ö…¥·¥áÍú±Íú± ·¥õ·¥á·¥Ñ ú`;

            await conn.sendMessage(
                from,
                {
                    image: { url: `https://files.catbox.moe/3m1vb1.png` },
                    caption: dec,
                    contextInfo: {
                        mentionedJid: [m.sender],
                        forwardingScore: 2,
                        isForwarded: true,
                        forwardedNewsletterMessageInfo: {
                            newsletterJid: '120363421812440006@newsletter',
                            newsletterName: 'ùôäùôØùôöùôóùôñ ùôìùòø ùôäùôõùôõùôû·¥Ñ…™·¥Ä ü',
                            serverMessageId: 144
                        }
                    }
                },
                { quoted: mek }
            );

        } catch (e) {
            console.log(e);
            reply(`${e}`);
        }
    });